<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "vpn_user_settings".
 *
 * @property int $id
 * @property string|null $username
 * @property string|null $attribute
 * @property string|null $op
 * @property string|null $value
 */
class VpnUserSettings extends \yii\db\ActiveRecord
{
    public $email;
    public $pass;
    public $vpnid;
    public $untildate;
    public $datecreate;
    public $status;
    public $sccId;
    public $tariff;
    public $role;
    public $comment;
    public $use_ios;
    public $test_user;
    public $fcm_token;
    public $use_android;
    public $last_date_visit;
    public $visit_count;
    public $verifyCode;
    public static $statuses = ['ACTIVE' => 'ACTIVE','NOACTIVE' => 'NOACTIVE','EXPIRE' =>'EXPIRE','DELETED' => 'DELETED'];
    public static $roles = ['user' => 'user','moderator' => 'moderator','admin' =>'admin'];
    public static $tariffs = ['Free' => 'Free','Premium' => 'Premium','VIP' =>'VIP'];
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'radcheck';
    }

    public static function getDb()
    {
        return \Yii::$app->get('db2');
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['username', 'value'], 'required'],
            [['op', 'untildate'], 'safe'],
            ['username', 'unique'],
            ['email', 'check'],
            [['comment','use_ios','fcm_token'], 'string'],
            [['vpnid', 'untildate', 'datecreate','test_user','use_android','visit_count','use_ios','verifyCode'], 'integer'],
            [['last_date_visit'], 'safe'],
            [['value', 'email', 'pass', 'status', 'username', 'attribute', 'op'], 'string', 'max' => 255],
        ];
    }

    public function beforeSave($insert)
    {
        $this->op = ':=';
        $this->attribute = 'Cleartext-Password';
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        if(!$acc = Accs::findOne($this->sccId)) {
            $acc = new Accs();
        }
        $acc->email = $this->email;
        $acc->pass = $this->pass;
        $acc->vpnid = $this->id;
        $acc->status = $this->status;
        $acc->untildate = strtotime($this->untildate);
        $acc->datecreate = time();
        if (!$acc->save()) {
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAccs()
    {
        return $this->hasOne(Accs::className(), ['vpnid' => 'id']);
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'username' => 'Имя пользователя VPN',
            'value' => 'Пароль VPN',
            'status' => 'Статус',
            'untildate' => 'Дейстует до',
            'datecreate' => 'Дата создания',
            'email' => 'Email (доступа к сайту)',
            'pass' => 'Пароль (доступа к сайту)',
        ];
    }

    public function check()
    {
        $acc = Accs::find()->where(['email' => $this->email])->all();
        if (!$this->id && !empty($acc)) {
            $this->addError('email', 'email duplicate');
            return false;
        }
        return true;
    }

    public function __construct($config = [])
    {

        parent::__construct($config);
    }

}
